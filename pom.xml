<project xmlns="https://maven.apache.org/POM/4.0.0" xmlns:xsi="https://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>whisperTextExtractor</groupId>
  <artifactId>whisperTextExtractor</artifactId>
  <version>1.0.0</version>
  <name>whisperTextExtractor</name>
  	<properties>
	    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.target>21</maven.compiler.target>
		<maven.compiler.source>21</maven.compiler.source>
		<java.version>21</java.version>
	</properties>
  <dependencies>
	<dependency>
	    <groupId>io.github.givimad</groupId>
	    <artifactId>whisper-jni</artifactId>
	    <version>1.5.4-0</version>
	</dependency>
	<dependency>
	  <groupId>net.bramp.ffmpeg</groupId>
	  <artifactId>ffmpeg</artifactId>
	  <version>0.8.0</version>
	</dependency>
	<!-- https://mvnrepository.com/artifact/com.miglayout/miglayout-swing -->
	<dependency>
	    <groupId>com.miglayout</groupId>
	    <artifactId>miglayout-swing</artifactId>
	    <version>11.3</version>
	</dependency>
	<!-- https://mvnrepository.com/artifact/com.jtattoo/JTattoo -->
	<dependency>
	    <groupId>com.jtattoo</groupId>
	    <artifactId>JTattoo</artifactId>
	    <version>1.6.13</version>
	</dependency>
	<!-- https://mvnrepository.com/artifact/ch.qos.logback/logback-classic -->
	<dependency>
		<groupId>ch.qos.logback</groupId>
		<artifactId>logback-classic</artifactId>
		<version>1.4.14</version>
	</dependency>
	<!-- https://mvnrepository.com/artifact/ch.qos.logback/logback-core -->
	<dependency>
		<groupId>ch.qos.logback</groupId>
		<artifactId>logback-core</artifactId>
		<version>1.4.14</version>
	</dependency>
  </dependencies>
  <profiles>
		<profile>
			<id>windows-pkg</id>
			<build>
				<plugins>
					<plugin>
						<groupId>com.igormaznitsa</groupId>
						<!-- Plugin to download other plateform JDK, thus enabling jlink to generate image for all platforms-->
						<artifactId>mvn-jlink-wrapper</artifactId>
						<version>1.2.1</version>
						<executions>
							<execution>
								<phase>prepare-package</phase>
								<id>cache-jdk-21-windows</id>
								<goals>
									<goal>cache-jdk</goal>
								</goals>
								<configuration>
									<jdkCachePath>${project.build.directory}${file.separator}jdkCache</jdkCachePath>
									<provider>ADOPTIUM</provider>
									<providerConfig>
										<version>21U</version>
										<arch>x64</arch>
										<type>jdk</type>
										<impl>hotspot</impl>
										<os>windows</os>
										<build>2024-01-21-02-59</build>
									</providerConfig>
								</configuration>
							</execution>
							<execution>
					            <id>call-jdeps</id>
								<phase>prepare-package</phase>
					            <goals>
					                <goal>jdeps</goal>
					            </goals>
					            <configuration>
					                <output>${project.build.directory}${file.separator}jdeps.out</output>
					                <options>
					                    <option>${project.build.directory}${file.separator}${project.build.finalName}.jar</option>
					                </options>
					            </configuration>
					        </execution>
					        <execution>
					            <id>call-jlink</id>
								<phase>package</phase>
					            <goals>
					                <goal>jlink</goal>
					            </goals>
					            <configuration>
					                <jdepsReportPath>${project.build.directory}${file.separator}jdeps.out</jdepsReportPath>
					                <output>${project.build.directory}${file.separator}${project.name}-${project.version}-windows</output>
					                <modulePaths>
					                    <path>${project.build.directory}${file.separator}jdkCache${file.separator}ADOPTIUM_21u_2024-01-21-02-59_windows_x64_hotspot${file.separator}jmods</path>
					                </modulePaths>
					                <addModules>
					                    <module>java.base</module>
					                    <module>java.desktop</module>
					                    <module>java.naming</module>
					                </addModules>
					                <options>
					                    <option>--compress=2</option>
					                    <option>--no-header-files</option>
					                    <option>--no-man-pages</option>
					                </options>
					            </configuration>
					        </execution>
						</executions>
					</plugin>
					<plugin>
						<artifactId>maven-resources-plugin</artifactId>
						<version>3.3.1</version>
						<executions>
							<execution>
								<id>copy-fat-jar</id>
								<phase>package</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<resources>
										<resource>
											<directory>${basedir}/target</directory>
									        <includes>
									            <include>${project.name}-${project.version}-jar-with-dependencies.jar</include>
									        </includes>
											<filtering>false</filtering>
										</resource>
									</resources>
									<outputDirectory>${basedir}/target/${project.name}-${project.version}-windows/jars</outputDirectory>
								</configuration>
							</execution>
							<execution>
								<id>copy-scripts</id>
								<phase>package</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<resources>
										<resource>
											<directory>scripts/windows</directory>
											<filtering>false</filtering>
										</resource>
									</resources>
									<outputDirectory>${basedir}/target/${project.name}-${project.version}-windows</outputDirectory>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>linux-pkg</id>
			<build>
				<plugins>
					<plugin>
						<groupId>com.igormaznitsa</groupId>
						<!-- Plugin to download other plateform JDK, thus enabling jlink to generate image for all platforms-->
						<artifactId>mvn-jlink-wrapper</artifactId>
						<version>1.2.1</version>
						<executions>
							<execution>
								<phase>prepare-package</phase>
								<id>cache-jdk-21-linux</id>
								<goals>
									<goal>cache-jdk</goal>
								</goals>
								<configuration>
									<jdkPathProperty>jlink.jdk.path</jdkPathProperty>
									<jdkCachePath>${project.build.directory}${file.separator}jdkCache</jdkCachePath>
									<provider>ADOPTIUM</provider>
									<providerConfig>
										<version>21U</version>
										<arch>x64</arch>
										<type>jdk</type>
										<impl>hotspot</impl>
										<os>linux</os>
										<build>2024-01-21-02-59</build>
									</providerConfig>
								</configuration>
							</execution>
					        <execution>
					            <id>call-jdeps</id>
								<phase>prepare-package</phase>
					            <goals>
					                <goal>jdeps</goal>
					            </goals>
					            <configuration>
					                <output>${project.build.directory}${file.separator}jdeps.out</output>
					                <options>
					                    <option>${project.build.directory}${file.separator}${project.build.finalName}.jar</option>
					                </options>
					            </configuration>
					        </execution>
					        <execution>
								<!--  same as dashdash output C:\crea\projets\whisperTextExtractor\target\preparedJDK dashdash compress=2 dashdash no-header-files dashdash no-man-pages dashdash module-path C:\outils\java\jdk\ADOPTIUM_21u_2024-01-21-02-59_windows_x64_hotspot\jmods dashdash add-modules java.base,java.desktop,java.compiler -->
					            <id>call-jlink</id>
								<phase>package</phase>
					            <goals>
					                <goal>jlink</goal>
					            </goals>
					            <configuration>
					                <jdepsReportPath>${project.build.directory}${file.separator}jdeps.out</jdepsReportPath>
					                <output>${basedir}/target/${project.name}-${project.version}-linux</output>
					                <modulePaths>
					                    <path>${project.build.directory}${file.separator}jdkCache${file.separator}ADOPTIUM_21u_2024-01-21-02-59_linux_x64_hotspot${file.separator}jmods</path>
					                </modulePaths>
					                <addModules>
					                    <module>java.base</module>
					                    <module>java.desktop</module>
					                    <module>java.naming</module>
					                </addModules>
					                <options>
					                    <option>--compress=2</option>
					                    <option>--no-header-files</option>
					                    <option>--no-man-pages</option>
					                </options>
					            </configuration>
					        </execution>
						</executions>
					</plugin>
					<plugin>
						<artifactId>maven-resources-plugin</artifactId>
						<version>3.3.1</version>
						<executions>
							<execution>
								<id>copy-fat-jar</id>
								<phase>package</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<resources>
										<resource>
											<directory>${basedir}/target</directory>
									        <includes>
									            <include>${project.name}-${project.version}-jar-with-dependencies.jar</include>
									        </includes>
											<filtering>false</filtering>
										</resource>
									</resources>
									<outputDirectory>${basedir}/target/${project.name}-${project.version}-linux/jars</outputDirectory>
								</configuration>
							</execution>
							<execution>
								<id>copy-scripts</id>
								<phase>package</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<outputDirectory>${basedir}/target/${project.name}-${project.version}-linux</outputDirectory>
									<resources>
										<resource>
											<directory>scripts/linux</directory>
											<filtering>false</filtering>
										</resource>
									</resources>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
  </profiles>
  <build>
	  <plugins>
		<plugin>
	      <!-- Build an executable JAR wihtout dependencies included -->
	      <groupId>org.apache.maven.plugins</groupId>
	      <artifactId>maven-jar-plugin</artifactId>
	      <version>3.1.0</version>
	      <executions>
			<execution>
				<id>default-jar</id> <!-- the name is important, it override the classifier attached to the package phase https://stackoverflow.com/questions/40964500 -->
				<phase>prepare-package</phase>
				<goals>
					<goal>jar</goal>
				</goals>
			</execution>
	      </executions>
	      <configuration>
	        <archive>
	          <manifest>
	            <addClasspath>true</addClasspath>
	            <mainClass>fr.wtx.Main</mainClass>
	          </manifest>
	        </archive>
	      </configuration>
	    </plugin>
        <plugin>
			<!-- fat jar -->
	        <groupId>org.apache.maven.plugins</groupId>
	        <artifactId>maven-assembly-plugin</artifactId>
	        <version>3.1.0</version>
	        <configuration>
				<archive>
					<manifest>
	            		<mainClass>fr.wtx.Main</mainClass>
	         		</manifest>
				</archive>
	            <descriptorRefs>
	                <descriptorRef>jar-with-dependencies</descriptorRef>
	            </descriptorRefs>
	        </configuration>
		    <executions>
		        <execution>
		            <id>assemble-all</id>
		            <phase>prepare-package</phase>
		            <goals>
		                <goal>single</goal>
		            </goals>
		     </execution>
	    </executions>
        </plugin>
	</plugins>
  </build>
</project>
<project xmlns="https://maven.apache.org/POM/4.0.0" xmlns:xsi="https://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>whisperTextExtractor</groupId>
  <artifactId>whisperTextExtractor</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <name>whisperTextExtractor</name>
  	<properties>
	    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.target>21</maven.compiler.target>
		<maven.compiler.source>21</maven.compiler.source>
		<java.version>21</java.version>
	</properties>
  <dependencies>
	<dependency>
	    <groupId>io.github.givimad</groupId>
	    <artifactId>whisper-jni</artifactId>
	    <version>1.5.4-0</version>
	</dependency>
	<dependency>
	  <groupId>net.bramp.ffmpeg</groupId>
	  <artifactId>ffmpeg</artifactId>
	  <version>0.8.0</version>
	</dependency>
	<!-- https://mvnrepository.com/artifact/com.miglayout/miglayout-swing -->
	<dependency>
	    <groupId>com.miglayout</groupId>
	    <artifactId>miglayout-swing</artifactId>
	    <version>11.3</version>
	</dependency>
	<dependency>
	  <groupId>com.github.weisj</groupId>
	  <artifactId>darklaf-core</artifactId>
	  <version>3.0.2</version>
	</dependency>
	<!-- https://mvnrepository.com/artifact/ch.qos.logback/logback-classic -->
	<dependency>
		<groupId>ch.qos.logback</groupId>
		<artifactId>logback-classic</artifactId>
		<version>1.4.14</version>
	</dependency>
	<!-- https://mvnrepository.com/artifact/ch.qos.logback/logback-core -->
	<dependency>
		<groupId>ch.qos.logback</groupId>
		<artifactId>logback-core</artifactId>
		<version>1.4.14</version>
	</dependency>
  </dependencies>
  <profiles>
			<profile>
			<id>dl-windows-jdk</id>
			<build>
				<plugins>
					<plugin>
						<groupId>com.igormaznitsa</groupId>
						<!-- Plugin to download other plateform JDK, thus enabling jlink to generate image for all platforms-->
						<artifactId>mvn-jlink-wrapper</artifactId>
						<version>1.2.1</version>
						<executions>
							<execution>
								<phase>prepare-package</phase>
								<id>cache-jdk-21-windows</id>
								<goals>
									<goal>cache-jdk</goal>
								</goals>
								<configuration>
									<jdkPathProperty>jlink.jdk.path</jdkPathProperty>
									<jdkCachePath>${project.build.directory}${file.separator}jdkCache</jdkCachePath>
									<provider>ADOPTIUM</provider>
									<providerConfig>
										<version>21U</version>
										<arch>x64</arch>
										<type>jdk</type>
										<impl>hotspot</impl>
										<os>windows</os>
										<build>2024-01-21-02-59</build>
									</providerConfig>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
					    <groupId>org.moditect</groupId>
					    <artifactId>moditect-maven-plugin</artifactId>
					    <version>1.0.0.Final</version>
					    <executions>
					        <execution>
					            <id>create-runtime-image</id>
					            <phase>package</phase>
					            <goals>
					                <goal>create-runtime-image</goal>
					            </goals>
					            <configuration>
					                <modulePath>${project.build.directory}${file.separator}jdkCache${file.separator}ADOPTIUM_21u_2024-01-21-02-59_windows_x64_hotspot${file.separator}jmods</modulePath>
					                <modules>
					                    <module>java.base</module>
					                </modules>
					                <launcher>
										<module>module-info.java</module>
										<mainClass>fr.wtx.Main</mainClass>
					                </launcher>
					                <compression>2</compression>
					                <stripDebug>true</stripDebug>
					                <outputDirectory>${project.build.directory}/jlink-image</outputDirectory>
					                <jarInclusionPolicy>APP_WITH_DEPENDENCIES</jarInclusionPolicy>
					            </configuration>
					        </execution>
					    </executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>dl-linux-jdk</id>
			<build>
				<plugins>
					<plugin>
						<groupId>com.igormaznitsa</groupId>
						<!-- Plugin to download other plateform JDK, thus enabling jlink to generate image for all platforms-->
						<artifactId>mvn-jlink-wrapper</artifactId>
						<version>1.2.1</version>
						<executions>
							<execution>
								<phase>prepare-package</phase>
								<id>cache-jdk-21-linux</id>
								<goals>
									<goal>cache-jdk</goal>
								</goals>
								<configuration>
									<jdkPathProperty>jlink.jdk.path</jdkPathProperty>
									<jdkCachePath>${project.build.directory}${file.separator}jdkCache</jdkCachePath>
									<provider>ADOPTIUM</provider>
									<providerConfig>
										<version>21U</version>
										<arch>x64</arch>
										<type>jdk</type>
										<impl>hotspot</impl>
										<os>linux</os>
										<build>2024-01-21-02-59</build>
									</providerConfig>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
  </profiles>
  <build>
	  <plugins>
		<plugin>
				<!-- Plugin needed to avoid the error "automatic module cannot be used with jlink" to inject module info to dependencies that doesn't have it -->
				<groupId>org.moditect</groupId>
				<artifactId>moditect-maven-plugin</artifactId>
				<version>1.0.0.RC2</version>
				<executions>
					<execution>
						<id>add-module-infos</id>
						<phase>generate-resources</phase>
						<goals>
							<goal>add-module-info</goal>
						</goals>
						<configuration>
							<overwriteExistingFiles>true</overwriteExistingFiles>
							<outputDirectory>${project.build.directory}${file.separator}modules</outputDirectory>
							<modules>
								<module>
									<artifact>
								    <groupId>io.github.givimad</groupId>
								    <artifactId>whisper-jni</artifactId>
								    <version>1.5.4-0</version>
									</artifact>
									<!-- I generated the module-info using "jdeps.exe dashdash generate-module-info out whisper-jni-1.5.4-0.jar" and copy/pasted here -->
									<moduleInfoSource>
										module whisper.jni {
										    exports io.github.givimad.whisperjni;
										    exports io.github.givimad.whisperjni.internal;

										}
		                        </moduleInfoSource>
								</module>
																<module>
									<artifact>
								    <groupId>net.bramp.ffmpeg</groupId>
								    <artifactId>ffmpeg</artifactId>
								    <version>0.8.0</version>
									</artifact>
									<moduleInfoSource>
										module ffmpeg {
										    requires transitive java.desktop;
										
										    exports net.bramp.commons.lang3.math.gson;
										    exports net.bramp.ffmpeg;
										    exports net.bramp.ffmpeg.builder;
										    exports net.bramp.ffmpeg.gson;
										    exports net.bramp.ffmpeg.info;
										    exports net.bramp.ffmpeg.io;
										    exports net.bramp.ffmpeg.job;
										    exports net.bramp.ffmpeg.modelmapper;
										    exports net.bramp.ffmpeg.nut;
										    exports net.bramp.ffmpeg.options;
										    exports net.bramp.ffmpeg.probe;
										    exports net.bramp.ffmpeg.progress;
										
										}

		                        </moduleInfoSource>
								</module>
								</modules>
						</configuration>
					</execution>
				</executions>
			</plugin>
            <plugin>
				<!-- fat jar -->
	            <groupId>org.apache.maven.plugins</groupId>
	            <artifactId>maven-assembly-plugin</artifactId>
	            <version>3.1.0</version>
	            <configuration>
					<archive>
						<manifest>
		            		<mainClass>fr.wtx.Main</mainClass>
		         		</manifest>
					</archive>
	                <descriptorRefs>
	                    <descriptorRef>jar-with-dependencies</descriptorRef>
	                </descriptorRefs>
	            </configuration>
            <executions>
                <execution>
                    <id>assemble-all</id>
                    <phase>package</phase>
                    <goals>
                        <goal>single</goal>
                    </goals>
                </execution>
            </executions>
        </plugin>
	</plugins>
  </build>
</project>